name: Data Scraping Automation (Quick Test)

on:
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  scrape-data:
    runs-on: ubuntu-latest
    timeout-minutes: 25  # ⏱️ Total job limited to 25 minutes

    env:
      TERM: xterm

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install playwright
        playwright install --with-deps
    
    - name: Verify input files
      run: |
        if [ ! -f "urls with titles.csv" ]; then
          echo "Error: urls with titles.csv not found"
          exit 1
        fi
        echo "Input file found, starting scraper..."
    
    - name: Run scraper with progress monitoring
      timeout-minutes: 20  # ⏱️ Only 20 minutes for scraper step
      continue-on-error: true
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        YOUR_SITE_URL: ${{ secrets.YOUR_SITE_URL }}
        YOUR_SITE_NAME: ${{ secrets.YOUR_SITE_NAME }}
        CI: true
        GITHUB_ACTIONS: true
      run: |
        (
          while true; do
            sleep 180
            echo "=== PROGRESS CHECK $(date) ==="
            ls -la *checkpoint* 2>/dev/null || echo "No checkpoint yet"
            ls -la *results* 2>/dev/null || echo "No results yet"
          done
        ) &
        
        timeout 1200 python main.py
        
        jobs -p | xargs -r kill || true

    - name: List all files for debugging
      if: always()
      run: |
        echo "=== LISTING ALL FILES ==="
        ls -la || true
    
    - name: Upload intermediate results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: intermediate-results-${{ github.run_number }}
        path: |
          pricing_results_with_resume.json
          pricing_results_with_resume_checkpoint.json
        if-no-files-found: warn
    
    - name: Check output files
      if: always()
      run: |
        if [ -f "pricing_results_with_resume.json" ]; then
          echo "✅ Main results file created"
          wc -l "pricing_results_with_resume.json"
        else
          echo "❌ Main results file not found"
        fi
        
        if [ -f "pricing_results_with_resume_checkpoint.json" ]; then
          echo "✅ Checkpoint file found"
        else
          echo "ℹ️ No checkpoint file (normal if completed)"
        fi
    
    - name: Commit and push results
      if: always()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        if ! git diff --cached --quiet; then
          git commit -m "Update scraping results (partial) - $(date '+%Y-%m-%d %H:%M:%S UTC')"
          git push
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
